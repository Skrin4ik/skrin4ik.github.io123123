{"version":3,"sources":["context.js","toDo/ToDoItem.js","toDo/ToDoList.js","Loader.js","Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","input","marginRight","ToDoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","style","className","join","type","checked","id","title","onClick","bind","ul","listStyle","margin","ToDoList","props","todos","map","onToggle","Modal","state","isOpen","Fragment","setState","this","Component","AddTodo","lazy","App","useState","setTodos","loading","setLoading","useEffect","fetch","then","response","json","setTimeout","Provider","value","filter","Suspense","fallback","Loader","onCreate","concat","Date","now","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f93b4a79.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Context = React.createContext()\r\n\r\nexport default Context","import React, {useContext} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from '../context'\r\n\r\nconst styles = {\r\n    li: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: '.5rem 1rem',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '4px',\r\n        marginBottom: '.5rem'\r\n    },\r\n    input: {\r\n        marginRight: '1rem'\r\n    }\r\n}\r\n\r\nfunction ToDoItem({ todo, index, onChange }){\r\n    const { removeTodo }= useContext(Context)\r\n    const classes =[]\r\n\r\n    if(todo.completed){\r\n        classes.push('done')\r\n    }\r\n    \r\n    return(\r\n        <li style={styles.li}>\r\n            <span className={classes.join(' ')}>\r\n                <input \r\n                type=\"checkbox\" \r\n                checked={todo.completed}\r\n                style={styles.input} \r\n                onChange={() => onChange(todo.id)}/>     \r\n                <strong>{++index}</strong>\r\n                &nbsp;\r\n                {todo.title}\r\n            </span>\r\n\r\n            <button className='rm' onClick={removeTodo.bind(null, todo.id)}>&times;</button>\r\n        </li>\r\n\r\n    )\r\n}\r\n\r\nToDoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    index: PropTypes.number,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default ToDoItem","import React from 'react'\r\nimport ToDoItem from './ToDoItem'\r\nimport PropTypes from 'prop-types'\r\nconst styles = {\r\n    ul: {\r\n        listStyle: 'none',\r\n        margin: 0,\r\n        padding: 0\r\n    }\r\n}\r\n\r\nfunction ToDoList(props) {\r\n    return (\r\n        <ul style={styles.ul}>\r\n            {props.todos.map((todo, index) => {\r\n                return (\r\n                    <ToDoItem \r\n                        todo={todo} \r\n                        key={todo.id} \r\n                        index={index} \r\n                        onChange={props.onToggle}\r\n                    />\r\n                )\r\n            }) }\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nToDoList.propTypes = {\r\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onToggle: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ToDoList","import React from 'react'\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default () => (\r\n    <div style={{ display: 'flex', justifyContent: 'center', margin: '.5rem' }}>\r\n        <div className='lds-dual-ring' />\r\n    </div>\r\n)","import React from 'react'\r\nimport './Modal.css'\r\n\r\nexport default class Modal extends React.Component {\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <button onClick={() => this.setState({isOpen: true})}>Open modal</button>\r\n\r\n                {this.state.isOpen && (\r\n                    <div className='modal'>\r\n                        <div className='modal-body'>\r\n                            <h1>Made by Artem Tsalapov</h1>\r\n                            <p>Tkanks for a lot!</p>\r\n                            <button onClick={() => this.setState({isOpen: false})}>Close modal</button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, {useEffect} from 'react'\nimport ToDoList from './toDo/ToDoList'\nimport Context from './context'\nimport Loader from './Loader'\nimport Modal from './Modal/Modal'\n\nconst AddTodo = React.lazy (() => import ('./toDo/AddTodo'))\n\nfunction App() {\n  const [todos, setTodos] = React.useState([])\n  const [loading, setLoading] = React.useState(true)\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n      .then(response => response.json())\n      .then(todos => {\n        setTimeout(() => {\n          setTodos (todos)\n          setLoading(false)\n        }, 2000)\n        \n      })\n  },[])\n  \n  function toggleTodo(id) {\n    setTodos(todos.map(todo => {\n      if(todo.id === id){\n        todo.completed = !todo.completed\n      }\n      return todo\n    })\n    )\n  }\n\n  function removeTodo(id){\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n\n  function addTodo(title){\n    setTodos(\n      todos.concat([\n        {\n          title,\n          id: Date.now(),\n          completed: false\n        }\n      ])\n    )\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo }}>\n    <div className='wrapper'>\n      <h1>My first to do list on React</h1>\n      <Modal />\n\n      <React.Suspense fallback={<Loader />}>\n      <AddTodo onCreate={addTodo} />\n      </React.Suspense>      \n\n      {loading && <Loader />}\n      {todos.length ? (\n        <ToDoList todos={todos} onToggle={toggleTodo} />\n        ) : (\n            loading ? null : (\n              <p>No todos!</p>\n            )\n          )} \n    </div>\n    </Context.Provider>\n  );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}